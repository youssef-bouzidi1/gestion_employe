{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LeaveService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = '/api/leaves';\n  }\n  getLeaves() {\n    return this.http.get(this.apiUrl);\n  }\n  getLeave(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  requestLeave(leave) {\n    return this.http.post(this.apiUrl, leave);\n  }\n  approveLeave(id, approverId) {\n    return this.http.put(`${this.apiUrl}/${id}/approve`, {\n      approverId\n    });\n  }\n  rejectLeave(id, approverId) {\n    return this.http.put(`${this.apiUrl}/${id}/reject`, {\n      approverId\n    });\n  }\n  static {\n    this.ɵfac = function LeaveService_Factory(t) {\n      return new (t || LeaveService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LeaveService,\n      factory: LeaveService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpClient","LeaveService","constructor","http","apiUrl","getLeaves","get","getLeave","id","requestLeave","leave","post","approveLeave","approverId","put","rejectLeave","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["D:\\5IIR\\tp_java\\gestion_employe\\project\\src\\app\\services\\leave.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Leave {\n  id?: number;\n  employeeId: number;\n  startDate: string;\n  endDate: string;\n  type: 'VACATION' | 'SICK' | 'PERSONAL' | 'MATERNITY' | 'PATERNITY';\n  status: 'PENDING' | 'APPROVED' | 'REJECTED';\n  reason: string;\n  approverId?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaveService {\n  private apiUrl = '/api/leaves';\n\n  constructor(private http: HttpClient) { }\n\n  getLeaves(): Observable<Leave[]> {\n    return this.http.get<Leave[]>(this.apiUrl);\n  }\n\n  getLeave(id: number): Observable<Leave> {\n    return this.http.get<Leave>(`${this.apiUrl}/${id}`);\n  }\n\n  requestLeave(leave: Leave): Observable<Leave> {\n    return this.http.post<Leave>(this.apiUrl, leave);\n  }\n\n  approveLeave(id: number, approverId: number): Observable<Leave> {\n    return this.http.put<Leave>(`${this.apiUrl}/${id}/approve`, { approverId });\n  }\n\n  rejectLeave(id: number, approverId: number): Observable<Leave> {\n    return this.http.put<Leave>(`${this.apiUrl}/${id}/reject`, { approverId });\n  }\n}"],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;;;AAiBjD,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,aAAa;EAEU;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrD;EAEAC,YAAYA,CAACC,KAAY;IACvB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAClD;EAEAE,YAAYA,CAACJ,EAAU,EAAEK,UAAkB;IACzC,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,UAAU,EAAE;MAAEK;IAAU,CAAE,CAAC;EAC7E;EAEAE,WAAWA,CAACP,EAAU,EAAEK,UAAkB;IACxC,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,IAAII,EAAE,SAAS,EAAE;MAAEK;IAAU,CAAE,CAAC;EAC5E;;;uBAvBWZ,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAlB,UAAA;IAAA;EAAA;;;aAAZC,YAAY;MAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}